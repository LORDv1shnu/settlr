{"ast":null,"code":"var _jsxFileName = \"/Users/rohanksojo/Documents/Folders/Settler/src/context/ExpenseContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseContext = /*#__PURE__*/createContext();\nconst initialState = {\n  expenses: [{\n    id: 1,\n    description: 'Dinner at Paradise Biryani',\n    amount: 1200,\n    paidBy: 'Rahul',\n    group: 'College Friends',\n    splitBetween: ['You', 'Rahul', 'Priya', 'Arjun'],\n    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString()\n  }, {\n    id: 2,\n    description: 'Ola cab to airport',\n    amount: 450,\n    paidBy: 'You',\n    group: 'Mumbai Trip',\n    splitBetween: ['You', 'Sneha', 'Vikram'],\n    createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString()\n  }, {\n    id: 3,\n    description: 'Movie tickets at PVR',\n    amount: 800,\n    paidBy: 'Priya',\n    group: 'College Friends',\n    splitBetween: ['You', 'Rahul', 'Priya', 'Arjun'],\n    createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n  }],\n  groups: [{\n    id: 1,\n    name: 'College Friends',\n    members: ['You', 'Rahul', 'Priya', 'Arjun'],\n    color: '#3b82f6'\n  }, {\n    id: 2,\n    name: 'Mumbai Trip',\n    members: ['You', 'Sneha', 'Vikram'],\n    color: '#22c55e'\n  }, {\n    id: 3,\n    name: 'Office Lunch',\n    members: ['You', 'Deepak', 'Kavya', 'Rohit', 'Ananya'],\n    color: '#f59e0b'\n  }],\n  currentUser: 'You',\n  balances: {\n    'Rahul': {\n      'You': 200,\n      'Priya': 100\n    },\n    'You': {\n      'Sneha': 150,\n      'Vikram': 150\n    },\n    'Priya': {\n      'You': 200,\n      'Rahul': 100\n    }\n  }\n};\nfunction expenseReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      const newExpense = {\n        id: Date.now(),\n        ...action.payload,\n        createdAt: new Date().toISOString()\n      };\n\n      // Calculate new balances\n      const updatedBalances = {\n        ...state.balances\n      };\n      const {\n        amount,\n        paidBy,\n        splitBetween\n      } = action.payload;\n      const splitAmount = amount / splitBetween.length;\n\n      // Update balances for each person\n      splitBetween.forEach(person => {\n        if (!updatedBalances[person]) {\n          updatedBalances[person] = {};\n        }\n        if (!updatedBalances[person][paidBy]) {\n          updatedBalances[person][paidBy] = 0;\n        }\n        if (!updatedBalances[paidBy]) {\n          updatedBalances[paidBy] = {};\n        }\n        if (!updatedBalances[paidBy][person]) {\n          updatedBalances[paidBy][person] = 0;\n        }\n        if (person !== paidBy) {\n          updatedBalances[person][paidBy] += splitAmount;\n          updatedBalances[paidBy][person] -= splitAmount;\n        }\n      });\n      return {\n        ...state,\n        expenses: [...state.expenses, newExpense],\n        balances: updatedBalances\n      };\n    case 'SETTLE_UP':\n      const {\n        from,\n        to,\n        amount: settleAmount\n      } = action.payload;\n      const settledBalances = {\n        ...state.balances\n      };\n      if (settledBalances[from] && settledBalances[from][to]) {\n        settledBalances[from][to] -= settleAmount;\n        if (settledBalances[from][to] <= 0) {\n          delete settledBalances[from][to];\n        }\n      }\n      if (settledBalances[to] && settledBalances[to][from]) {\n        settledBalances[to][from] += settleAmount;\n        if (settledBalances[to][from] <= 0) {\n          delete settledBalances[to][from];\n        }\n      }\n      return {\n        ...state,\n        balances: settledBalances\n      };\n    case 'ADD_GROUP':\n      return {\n        ...state,\n        groups: [...state.groups, action.payload]\n      };\n    default:\n      return state;\n  }\n}\nexport function ExpenseProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(expenseReducer, initialState);\n  const addExpense = expense => {\n    dispatch({\n      type: 'ADD_EXPENSE',\n      payload: expense\n    });\n  };\n  const settleUp = (from, to, amount) => {\n    dispatch({\n      type: 'SETTLE_UP',\n      payload: {\n        from,\n        to,\n        amount\n      }\n    });\n  };\n  const addGroup = group => {\n    dispatch({\n      type: 'ADD_GROUP',\n      payload: group\n    });\n  };\n  const getNetBalance = person => {\n    const balances = state.balances[person] || {};\n    let totalOwed = 0;\n    let totalOwing = 0;\n    Object.entries(balances).forEach(([otherPerson, amount]) => {\n      if (amount > 0) {\n        totalOwed += amount;\n      } else {\n        totalOwing += Math.abs(amount);\n      }\n    });\n    return {\n      totalOwed,\n      totalOwing,\n      net: totalOwed - totalOwing\n    };\n  };\n  const getSimplifiedBalances = () => {\n    const simplified = [];\n    const processed = new Set();\n    Object.entries(state.balances).forEach(([person, balances]) => {\n      Object.entries(balances).forEach(([otherPerson, amount]) => {\n        const key = [person, otherPerson].sort().join('-');\n        if (!processed.has(key) && amount !== 0) {\n          simplified.push({\n            from: amount > 0 ? otherPerson : person,\n            to: amount > 0 ? person : otherPerson,\n            amount: Math.abs(amount)\n          });\n          processed.add(key);\n        }\n      });\n    });\n    return simplified;\n  };\n  return /*#__PURE__*/_jsxDEV(ExpenseContext.Provider, {\n    value: {\n      ...state,\n      addExpense,\n      settleUp,\n      addGroup,\n      getNetBalance,\n      getSimplifiedBalances\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ExpenseProvider;\nexport function useExpense() {\n  _s2();\n  const context = useContext(ExpenseContext);\n  if (!context) {\n    throw new Error('useExpense must be used within an ExpenseProvider');\n  }\n  return context;\n}\n_s2(useExpense, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ExpenseProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","ExpenseContext","initialState","expenses","id","description","amount","paidBy","group","splitBetween","createdAt","Date","now","toISOString","groups","name","members","color","currentUser","balances","expenseReducer","state","action","type","newExpense","payload","updatedBalances","splitAmount","length","forEach","person","from","to","settleAmount","settledBalances","ExpenseProvider","children","_s","dispatch","addExpense","expense","settleUp","addGroup","getNetBalance","totalOwed","totalOwing","Object","entries","otherPerson","Math","abs","net","getSimplifiedBalances","simplified","processed","Set","key","sort","join","has","push","add","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useExpense","_s2","context","Error","$RefreshReg$"],"sources":["/Users/rohanksojo/Documents/Folders/Settler/src/context/ExpenseContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nconst ExpenseContext = createContext();\n\nconst initialState = {\n  expenses: [\n    {\n      id: 1,\n      description: 'Dinner at Paradise Biryani',\n      amount: 1200,\n      paidBy: 'Rahul',\n      group: 'College Friends',\n      splitBetween: ['You', 'Rahul', 'Priya', 'Arjun'],\n      createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString()\n    },\n    {\n      id: 2,\n      description: 'Ola cab to airport',\n      amount: 450,\n      paidBy: 'You',\n      group: 'Mumbai Trip',\n      splitBetween: ['You', 'Sneha', 'Vikram'],\n      createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString()\n    },\n    {\n      id: 3,\n      description: 'Movie tickets at PVR',\n      amount: 800,\n      paidBy: 'Priya',\n      group: 'College Friends',\n      splitBetween: ['You', 'Rahul', 'Priya', 'Arjun'],\n      createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n    }\n  ],\n  groups: [\n    {\n      id: 1,\n      name: 'College Friends',\n      members: ['You', 'Rahul', 'Priya', 'Arjun'],\n      color: '#3b82f6'\n    },\n    {\n      id: 2,\n      name: 'Mumbai Trip',\n      members: ['You', 'Sneha', 'Vikram'],\n      color: '#22c55e'\n    },\n    {\n      id: 3,\n      name: 'Office Lunch',\n      members: ['You', 'Deepak', 'Kavya', 'Rohit', 'Ananya'],\n      color: '#f59e0b'\n    }\n  ],\n  currentUser: 'You',\n  balances: {\n    'Rahul': {\n      'You': 200,\n      'Priya': 100\n    },\n    'You': {\n      'Sneha': 150,\n      'Vikram': 150\n    },\n    'Priya': {\n      'You': 200,\n      'Rahul': 100\n    }\n  }\n};\n\nfunction expenseReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      const newExpense = {\n        id: Date.now(),\n        ...action.payload,\n        createdAt: new Date().toISOString()\n      };\n      \n      // Calculate new balances\n      const updatedBalances = { ...state.balances };\n      const { amount, paidBy, splitBetween } = action.payload;\n      const splitAmount = amount / splitBetween.length;\n      \n      // Update balances for each person\n      splitBetween.forEach(person => {\n        if (!updatedBalances[person]) {\n          updatedBalances[person] = {};\n        }\n        if (!updatedBalances[person][paidBy]) {\n          updatedBalances[person][paidBy] = 0;\n        }\n        if (!updatedBalances[paidBy]) {\n          updatedBalances[paidBy] = {};\n        }\n        if (!updatedBalances[paidBy][person]) {\n          updatedBalances[paidBy][person] = 0;\n        }\n        \n        if (person !== paidBy) {\n          updatedBalances[person][paidBy] += splitAmount;\n          updatedBalances[paidBy][person] -= splitAmount;\n        }\n      });\n      \n      return {\n        ...state,\n        expenses: [...state.expenses, newExpense],\n        balances: updatedBalances\n      };\n      \n    case 'SETTLE_UP':\n      const { from, to, amount: settleAmount } = action.payload;\n      const settledBalances = { ...state.balances };\n      \n      if (settledBalances[from] && settledBalances[from][to]) {\n        settledBalances[from][to] -= settleAmount;\n        if (settledBalances[from][to] <= 0) {\n          delete settledBalances[from][to];\n        }\n      }\n      \n      if (settledBalances[to] && settledBalances[to][from]) {\n        settledBalances[to][from] += settleAmount;\n        if (settledBalances[to][from] <= 0) {\n          delete settledBalances[to][from];\n        }\n      }\n      \n      return {\n        ...state,\n        balances: settledBalances\n      };\n      \n    case 'ADD_GROUP':\n      return {\n        ...state,\n        groups: [...state.groups, action.payload]\n      };\n      \n    default:\n      return state;\n  }\n}\n\nexport function ExpenseProvider({ children }) {\n  const [state, dispatch] = useReducer(expenseReducer, initialState);\n  \n  const addExpense = (expense) => {\n    dispatch({ type: 'ADD_EXPENSE', payload: expense });\n  };\n  \n  const settleUp = (from, to, amount) => {\n    dispatch({ type: 'SETTLE_UP', payload: { from, to, amount } });\n  };\n  \n  const addGroup = (group) => {\n    dispatch({ type: 'ADD_GROUP', payload: group });\n  };\n  \n  const getNetBalance = (person) => {\n    const balances = state.balances[person] || {};\n    let totalOwed = 0;\n    let totalOwing = 0;\n    \n    Object.entries(balances).forEach(([otherPerson, amount]) => {\n      if (amount > 0) {\n        totalOwed += amount;\n      } else {\n        totalOwing += Math.abs(amount);\n      }\n    });\n    \n    return { totalOwed, totalOwing, net: totalOwed - totalOwing };\n  };\n  \n  const getSimplifiedBalances = () => {\n    const simplified = [];\n    const processed = new Set();\n    \n    Object.entries(state.balances).forEach(([person, balances]) => {\n      Object.entries(balances).forEach(([otherPerson, amount]) => {\n        const key = [person, otherPerson].sort().join('-');\n        if (!processed.has(key) && amount !== 0) {\n          simplified.push({\n            from: amount > 0 ? otherPerson : person,\n            to: amount > 0 ? person : otherPerson,\n            amount: Math.abs(amount)\n          });\n          processed.add(key);\n        }\n      });\n    });\n    \n    return simplified;\n  };\n  \n  return (\n    <ExpenseContext.Provider value={{\n      ...state,\n      addExpense,\n      settleUp,\n      addGroup,\n      getNetBalance,\n      getSimplifiedBalances\n    }}>\n      {children}\n    </ExpenseContext.Provider>\n  );\n}\n\nexport function useExpense() {\n  const context = useContext(ExpenseContext);\n  if (!context) {\n    throw new Error('useExpense must be used within an ExpenseProvider');\n  }\n  return context;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}