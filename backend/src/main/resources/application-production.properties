# Production-ready configuration with environment variable support
spring.application.name=settlr-backend

# Server Configuration
server.port=${PORT:8080}

# PostgreSQL Database Configuration
# Use environment variables for production, fallback to local development values
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/settlr_db}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:root}

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:false}

# Connection Pool Configuration (HikariCP)
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONN_TIMEOUT:30000}

# Session Management
server.servlet.session.timeout=30m

# CORS Configuration (update for production)
cors.allowed.origins=${CORS_ORIGINS:http://localhost:3000}

# Logging Configuration
logging.level.com.settlr.backend=${LOG_LEVEL:INFO}
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.web.servlet.DispatcherServlet=WARN

# Production-specific logging
logging.level.com.settlr.backend.controller.UserController=INFO
logging.level.com.settlr.backend.controller.ExpenseGroupController=INFO
logging.level.com.settlr.backend.controller.ExpenseController=WARN
logging.level.com.settlr.backend.service=INFO

# Security Headers
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=${INCLUDE_STACKTRACE:never}
server.error.include-exception=false
